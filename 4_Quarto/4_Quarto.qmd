---
title: "OPTIMA Lung Cancer Results"
format:
  html:
    page-layout: full
    css: styles.css
editor: visual
fig-width: 12  
---

# Results

```{r loading results, echo=FALSE, warning=FALSE, message=FALSE}
library(dplyr)
library(omopgenerics)
library(stringr)
library(CohortCharacteristics)
library(ggplot2)

results <-list.files("data", full.names = TRUE,
                     recursive = TRUE,
                     include.dirs = TRUE,
                     pattern = ".zip")

#unzip data
for (i in (1:length(results))) {
  utils::unzip(zipfile = results[[i]],
               exdir = "data")
}

results <- list.files(
  path = "data",
  pattern = ".csv",
  full.names = TRUE,
  recursive = TRUE,
  include.dirs = TRUE
)

incidence_estimates_files_std<-results[stringr::str_detect(results, ".csv")]
incidence_estimates_files_std<-results[stringr::str_detect(results, "incidence_estimates")]
incidence_estimates_files_std<-incidence_estimates_files_std[(stringr::str_detect(incidence_estimates_files_std, "_age_std"))]

incidence_estimates_std <- list()

for(i in seq_along(incidence_estimates_files_std)){
  incidence_estimates_std[[i]]<-readr::read_csv(incidence_estimates_files_std[[i]], 
                                            show_col_types = FALSE) %>% 
    mutate(incidence_start_date = as.Date(incidence_start_date))
}

incidence_estimates_std <- dplyr::bind_rows(incidence_estimates_std) %>% 
  mutate(cdm_name = str_replace_all(cdm_name, "_", " ")) %>% 
  mutate(outcome_cohort_name = case_when(
    outcome_cohort_name == "lung_cancer_incident_all" ~ "Lung Cancer All",
    outcome_cohort_name == "lung_cancer_incident_broad" ~ "Lung Cancer Broad",
    outcome_cohort_name == "lung_cancer_incident_narrow" ~ "Lung Cancer Narrow",
    outcome_cohort_name == "small_cell_lung_cancer" ~ "Small Cell Lung Cancer",
    TRUE ~ outcome_cohort_name
  )) %>% 
  mutate(cdm_name = case_when(
    cdm_name == "THIN es" ~ "THIN Spain",
    cdm_name == "THIN be" ~ "THIN Belgium",
    cdm_name == "THIN fr" ~ "THIN France",
    cdm_name == "THIN it" ~ "THIN Italy",
    cdm_name == "THIN ro" ~ "THIN Romania",
    cdm_name == "THIN uk" ~ "THIN UK",
    TRUE ~ cdm_name
  )) %>% 
  # Filter out rows where cdm_name starts with "THIN " and incidence_start_date == "2022-01-01" due to end of database cut affecting the denominator
  filter(!(str_starts(cdm_name, "THIN ") & incidence_start_date == "2022-01-01")) %>% 
  group_by(incidence_start_date, outcome_cohort_name) %>% 
  filter(!(outcome_cohort_name == "Small Cell Lung Cancer" & all(outcome_count == 0))) %>% 
  ungroup()

####
tableone_demo_files <- results[stringr::str_detect(results, ".csv")]
tableone_demo_files <- results[stringr::str_detect(results, "demographics")]
  
  if(length(tableone_demo_files > 0)){
    
    tableone_demo <- list()
    
    for(i in seq_along(tableone_demo_files)){
      #read in the files

      tableone_demo[[i]] <- omopgenerics::importSummarisedResult(tableone_demo_files[[i]], recursive = FALSE)
      
      
    }
    
  }
  
  demo_characteristics <- Reduce(omopgenerics::bind, tableone_demo) %>%
    mutate(cdm_name = str_replace_all(cdm_name, "_", " ")) %>% 
    mutate(group_level = case_when(
      group_level == "lung_cancer_incident_all" ~ "Lung Cancer All",
      group_level == "lung_cancer_incident_broad" ~ "Lung Cancer Broad",
      group_level == "lung_cancer_incident_narrow" ~ "Lung Cancer Narrow",
      group_level == "small_cell_lung_cancer" ~ "Small Cell Lung Cancer",
      group_level == "lung_cancer_incident_all_sampled" ~ "Lung Cancer All Sampled",
      group_level == "lung_cancer_incident_broad_sampled" ~ "Lung Cancer Broad Sampled",
      group_level == "lung_cancer_incident_narrow_sampled" ~ "Lung Cancer Narrow Sampled",
      group_level == "small_cell_lung_cancer_sampled" ~ "Small Cell Lung Cancer Sampled",
      group_level == "lung_cancer_incident_all_matched" ~ "Lung Cancer All Matched",
      group_level == "lung_cancer_incident_broad_matched" ~ "Lung Cancer Broad Matched",
      group_level == "lung_cancer_incident_narrow_matched" ~ "Lung Cancer Narrow Matched",
      group_level == "small_cell_lung_cancer_matched" ~ "Small Cell Lung Cancer Matched",
      TRUE ~ group_level
    )) %>% 
    
    mutate(cdm_name = case_when(
      cdm_name == "THIN es" ~ "THIN Spain",
      cdm_name == "THIN be" ~ "THIN Belgium",
      cdm_name == "THIN fr" ~ "THIN France",
      cdm_name == "THIN it" ~ "THIN Italy",
      cdm_name == "THIN ro" ~ "THIN Romania",
      cdm_name == "THIN uk" ~ "THIN UK",
      cdm_name == "USONCEMR202112SRC" ~ "OncoEMR",
      cdm_name == "German DA M202403" ~ "DA Germany",
      TRUE ~ cdm_name
    )) 
  
  # table one medications ------
tableone_med_files <- results[stringr::str_detect(results, ".csv")]
tableone_med_files <- results[stringr::str_detect(results, "medications")]

if(length(tableone_med_files > 0)){

  tableone_med <- list()

  for(i in seq_along(tableone_med_files)){
    #read in the files
    tableone_med[[i]] <- omopgenerics::importSummarisedResult(tableone_med_files[[i]], recursive = FALSE)


  }

}

med_characteristics <- Reduce(omopgenerics::bind, tableone_med) %>%
  mutate(cdm_name = case_when(
    cdm_name == "CPRD_GOLD_100k" ~ "CPRD_GOLD",
    cdm_name == "German DA M202403" ~ "DA Germany",
    cdm_name == "GERMANY DA" ~ "DA Germany",
    cdm_name == "USONCEMR202112SRC" ~ "OncoEMR",
    TRUE ~ cdm_name
  )) %>% 
  mutate(cdm_name = str_replace_all(cdm_name, "_", " ")) %>% 
  mutate(group_level = case_when(
    group_level == "lung_cancer_incident_all" ~ "Lung Cancer All",
    group_level == "lung_cancer_incident_broad" ~ "Lung Cancer Broad",
    group_level == "lung_cancer_incident_narrow" ~ "Lung Cancer Narrow",
    group_level == "small_cell_lung_cancer" ~ "Small Cell Lung Cancer",
    group_level == "lung_cancer_incident_all_sampled" ~ "Lung Cancer All Sampled",
    group_level == "lung_cancer_incident_broad_sampled" ~ "Lung Cancer Broad Sampled",
    group_level == "lung_cancer_incident_narrow_sampled" ~ "Lung Cancer Narrow Sampled",
    group_level == "small_cell_lung_cancer_sampled" ~ "Small Cell Lung Cancer Sampled",
    group_level == "lung_cancer_incident_all_matched" ~ "Lung Cancer All Matched",
    group_level == "lung_cancer_incident_broad_matched" ~ "Lung Cancer Broad Matched",
    group_level == "lung_cancer_incident_narrow_matched" ~ "Lung Cancer Narrow Matched",
    group_level == "small_cell_lung_cancer_matched" ~ "Small Cell Lung Cancer Matched",
    TRUE ~ group_level
  )) %>% 
  
  mutate(cdm_name = case_when(
    cdm_name == "THIN es" ~ "THIN Spain",
    cdm_name == "THIN be" ~ "THIN Belgium",
    cdm_name == "THIN fr" ~ "THIN France",
    cdm_name == "THIN it" ~ "THIN Italy",
    cdm_name == "THIN ro" ~ "THIN Romania",
    cdm_name == "THIN uk" ~ "THIN UK",
    TRUE ~ cdm_name
  )) 

rm(tableone_med)

# table one comorbidities ------
tableone_comorb_files <- results[stringr::str_detect(results, ".csv")]
tableone_comorb_files <- results[stringr::str_detect(results, "comorbidity")]

if(length(tableone_comorb_files > 0)){

  tableone_comorb <- list()

  for(i in seq_along(tableone_comorb_files)){
    #read in the files
    
    tableone_comorb[[i]] <- omopgenerics::importSummarisedResult(tableone_comorb_files[[i]], recursive = FALSE)


  }

}

comorb_characteristics <- Reduce(omopgenerics::bind, tableone_comorb) %>%
  mutate(cdm_name = case_when(
    cdm_name == "CPRD_GOLD_100k" ~ "CPRD_GOLD",
    cdm_name == "German DA M202403" ~ "DA Germany",
    cdm_name == "GERMANY DA" ~ "DA Germany",
    cdm_name == "USONCEMR202112SRC" ~ "OncoEMR",
    TRUE ~ cdm_name
  )) %>% 
  mutate(cdm_name = str_replace_all(cdm_name, "_", " ")) %>% 
mutate(group_level = case_when(
  group_level == "lung_cancer_incident_all" ~ "Lung Cancer All",
  group_level == "lung_cancer_incident_broad" ~ "Lung Cancer Broad",
  group_level == "lung_cancer_incident_narrow" ~ "Lung Cancer Narrow",
  group_level == "small_cell_lung_cancer" ~ "Small Cell Lung Cancer",
  group_level == "lung_cancer_incident_all_sampled" ~ "Lung Cancer All Sampled",
  group_level == "lung_cancer_incident_broad_sampled" ~ "Lung Cancer Broad Sampled",
  group_level == "lung_cancer_incident_narrow_sampled" ~ "Lung Cancer Narrow Sampled",
  group_level == "small_cell_lung_cancer_sampled" ~ "Small Cell Lung Cancer Sampled",
  group_level == "lung_cancer_incident_all_matched" ~ "Lung Cancer All Matched",
  group_level == "lung_cancer_incident_broad_matched" ~ "Lung Cancer Broad Matched",
  group_level == "lung_cancer_incident_narrow_matched" ~ "Lung Cancer Narrow Matched",
  group_level == "small_cell_lung_cancer_matched" ~ "Small Cell Lung Cancer Matched",
  TRUE ~ group_level
)) %>% 
  
  mutate(cdm_name = case_when(
    cdm_name == "THIN es" ~ "THIN Spain",
    cdm_name == "THIN be" ~ "THIN Belgium",
    cdm_name == "THIN fr" ~ "THIN France",
    cdm_name == "THIN it" ~ "THIN Italy",
    cdm_name == "THIN ro" ~ "THIN Romania",
    cdm_name == "THIN uk" ~ "THIN UK",
    TRUE ~ cdm_name
  )) 

rm(tableone_comorb)

```

## Table 1

```{r table one, warning=FALSE, echo=FALSE, message=FALSE}
#antihypertensives

char_1 <- demo_characteristics %>%
  filter(group_level == "Lung Cancer All",
         variable_name == "Age",
         estimate_name %in% c("mean", "sd"),
         strata_name == "overall"
  )

char_2 <- demo_characteristics %>%
  filter(group_level == "Lung Cancer All",
         variable_name == "Sex",
         variable_level == "Male",
         estimate_name %in% c("count", "percentage"),
         strata_name == "overall"
  )

char_3 <- demo_characteristics %>%
  filter(group_level == "Lung Cancer All",
         variable_name == "Number subjects",
         estimate_name %in% c("count", "percentage"),
         strata_name == "overall"
  )

char_4 <- comorb_characteristics %>%
  filter(group_level == "Lung Cancer All",
         variable_name == "Conditions prior to index date",
         estimate_name %in% c("count", "percentage"),
         strata_name == "overall",
         variable_level %in% c("Asthma", "Copd",
                               "Depressive disorder", "Cerebrovascular disease", "Hypertension",
                               "Hyperlipidemia", "T 2 d", "Anemia", "Ischemic heart disease",
                               "Chronic kidney disease")
  )

char_5 <- med_characteristics %>%
  filter(group_level == "Lung Cancer All",
         variable_name == "Medications 365 days prior to index date",
         estimate_name %in% c("count", "percentage"),
         strata_name == "overall",
         variable_level %in% c("Lipid modifying agents", "Drugs used in diabetes", "Immunosupressants",
                               "Drugs obstructive airway dis", "Antithrombotics", "Antidepressants",
                               "Antibacterials systemic", "Antiinflammatory antirheumatic",
                               "Diuretics", "Agents renin ang sys")) %>%
  mutate(variable_level = case_when(
    variable_level == "Agents renin ang sys" ~ "RAS-Acting Agents",
    TRUE ~ variable_level
  ))

table_one <- rbind(char_3, char_1, char_2, char_4, char_5) %>%
  filter(!cdm_name %in% c("OptimaEstonia", "OncoEMR", "THIN UK"))

tableCharacteristics(table_one,
                     type = "flextable",
                     header = c("cohort_name", "cdm_name"),
                     hide = c("additional_name", "additional_level", "strata_name", "strata_level", "table_name", "sex", "age_group"))
```

## Matched Large Scale Characteristics

```{r lsc matched, warning=FALSE, echo=FALSE, message=FALSE}
lsc_files <- results[stringr::str_detect(results, ".csv")]
lsc_files <- results[stringr::str_detect(results, "_large_scale")]

if(length(lsc_files > 0)){
  
  table_lsc <- list()
  
  for(i in seq_along(lsc_files)){

    table_lsc[[i]] <- omopgenerics::importSummarisedResult(lsc_files[[i]], recursive = FALSE)
    
    
  }
  
}

lsc_characteristics <- Reduce(omopgenerics::bind, table_lsc) %>%
  mutate(cdm_name = case_when(
    cdm_name == "CPRD_GOLD_100k" ~ "CPRD_GOLD",
    cdm_name == "German DA M202403" ~ "DA Germany",
    cdm_name == "GERMANY DA" ~ "DA Germany",
    cdm_name == "USONCEMR202112SRC" ~ "OncoEMR",
    TRUE ~ cdm_name
  )) %>% 
  mutate(cdm_name = str_replace_all(cdm_name, "_", " ")) %>% 
  mutate(group_level = case_when(
    group_level == "lung_cancer_incident_all" ~ "Lung Cancer All",
    group_level == "lung_cancer_incident_broad" ~ "Lung Cancer Broad",
    group_level == "lung_cancer_incident_narrow" ~ "Lung Cancer Narrow",
    group_level == "small_cell_lung_cancer" ~ "Small Cell Lung Cancer",
    group_level == "lung_cancer_incident_all_sampled" ~ "Lung Cancer All Sampled",
    group_level == "lung_cancer_incident_broad_sampled" ~ "Lung Cancer Broad Sampled",
    group_level == "lung_cancer_incident_narrow_sampled" ~ "Lung Cancer Narrow Sampled",
    group_level == "small_cell_lung_cancer_sampled" ~ "Small Cell Lung Cancer Sampled",
    group_level == "lung_cancer_incident_all_matched" ~ "Lung Cancer All Matched",
    group_level == "lung_cancer_incident_broad_matched" ~ "Lung Cancer Broad Matched",
    group_level == "lung_cancer_incident_narrow_matched" ~ "Lung Cancer Narrow Matched",
    group_level == "small_cell_lung_cancer_matched" ~ "Small Cell Lung Cancer Matched",
    TRUE ~ group_level
  )) %>% 
  
  mutate(cdm_name = case_when(
    cdm_name == "THIN es" ~ "THIN Spain",
    cdm_name == "THIN be" ~ "THIN Belgium",
    cdm_name == "THIN fr" ~ "THIN France",
    cdm_name == "THIN it" ~ "THIN Italy",
    cdm_name == "THIN ro" ~ "THIN Romania",
    cdm_name == "THIN uk" ~ "THIN UK",
    TRUE ~ cdm_name
  )) 

rm(table_lsc)

lsc_data <- lsc_characteristics %>% 
    filter(!is.na(estimate_value)) %>%
  filter(str_detect(group_level, paste("Lung Cancer All", collapse = "|"))) %>%
  visOmopResults::filterSettings(analysis == "standard")  
  
target_cohort <-  "Lung Cancer All Sampled"
comparator_cohort <- "Lung Cancer All Matched"

lsc_data <- lsc_data |>
    tidy() |>
    select(cdm_name,
           cohort_name,
           variable_name,
           concept_id,
           variable_level,
           table_name,
           percentage) |>
    tidyr::pivot_wider(names_from = cohort_name,
                values_from = percentage)

lsc <- lsc_data |>
    mutate(across(c(target_cohort, comparator_cohort), ~ as.numeric(.x)/100)) |>
    mutate(smd = (!!sym(target_cohort) - !!sym(comparator_cohort))/sqrt((!!sym(target_cohort)*(1-!!sym(target_cohort)) + !!sym(comparator_cohort)*(1-!!sym(comparator_cohort)))/2)) |>
    mutate(smd = round(smd, 3)) |>  # Round SMD to 3 decimal places
    arrange(desc(smd))  |>
    mutate(across(c(target_cohort, comparator_cohort), ~ as.numeric(.x)*100)) |>
    mutate(concept = paste0(variable_name, " (",concept_id, ")")) |>
    select("Database" = cdm_name,
           "Concept name (concept ID)" = concept,
           "Table" = table_name,
           "Time window" = variable_level,
           target_cohort,
           comparator_cohort,
           "Standardised mean difference" = smd) 
```


```{r lsc cats, echo=FALSE, warning=FALSE, message=FALSE}
cats <- readxl::read_excel("categories/SMDimbalance.xlsx",                         
    sheet = "SIGNS_SYMP_Presentation_-1to-12") %>%
  select(c(`Concept name (concept ID)`, PHENOTYPE)) %>%
  rename(`Signs and Symptoms` = PHENOTYPE) %>%
  distinct()

risks <- readxl::read_excel("categories/SMDimbalance.xlsx",                         
    sheet = "RISK FACTORS_-12to-inf") %>%
  select(c(`Concept name (concept ID)`, `Risk Factors`)) %>%
  distinct()

met <- readxl::read_excel("categories/SMDimbalance.xlsx",                         
    sheet = "RISK FACTORS_-12to-inf") %>%
  select(c(`Concept name (concept ID)`, `Metabolic Syndrome`)) %>%
  distinct()

lsc_cats <- merge(lsc, cats, by = "Concept name (concept ID)", all = TRUE) |>
  dplyr::filter(!`Concept name (concept ID)` %in% c(risks$`Concept name (concept ID)`, met$`Concept name (concept ID)`)) %>%
    filter(`Time window` %in% c("-365 to -31"))|>
  filter(Table == "condition_occurrence",
         !Database %in% c("OncoEMR", "OptimaEstonia"))

lsc_cats <- subset(lsc_cats %>% filter(!Database %in% c("THIN UK")), !is.na(`Lung Cancer All Sampled`) & !is.na(`Lung Cancer All Matched`)) %>% na.omit()

ggplot(lsc_cats, aes(x = `Signs and Symptoms`, y = `Standardised mean difference`)) +
  geom_point(aes(fill = `Signs and Symptoms`, size = `Lung Cancer All Sampled`),
             colour = "black", shape = 21) +
  labs(
    title = "SMD of signs and symptoms (-365 to -31)",
    y = "SMD",
    x = " "
  ) +
  geom_abline(intercept = -0.1, slope = 0, linetype = "dotted", color = "black") +
  geom_abline(intercept = 0.1, slope = 0, linetype = "dotted", color = "black") +
  facet_wrap(~Database) +
  ggplot2::theme(axis.text.x = ggplot2::element_blank()) +
  guides(size = "none")

```

```{r lsc cats 2, echo=FALSE, warning=FALSE, message=FALSE}
risks <- readxl::read_excel("categories/SMDimbalance.xlsx",                        , 
    sheet = "RISK FACTORS_-12to-inf") %>%
  select(c(`Concept name (concept ID)`, `Risk Factors`)) %>%
  distinct()

lsc_risks <- merge(lsc, risks, by = "Concept name (concept ID)", all = TRUE )
# Merge back to tag conditions with their appearance count per DB
lsc_risks <- lsc_risks %>% 
    mutate(across(c(target_cohort, comparator_cohort), ~ as.numeric(.x)/100)) |>
    mutate(across(c(target_cohort, comparator_cohort), ~ as.numeric(.x)*100)) |>
    filter(`Time window` %in% c("-365 to -31")) |>
  filter(Table == "condition_occurrence",
         !Database %in% c("OncoEMR", "OptimaEstonia"))

lsc_risks <- subset(lsc_risks, !is.na(`Lung Cancer All Sampled`) & !is.na(`Lung Cancer All Matched`)) %>%
  na.omit()

ggplot(lsc_risks, aes(x = `Risk Factors`, y = `Standardised mean difference`)) +
  geom_point(aes(fill = `Risk Factors`, size = `Lung Cancer All Sampled`),
             colour = "black", shape = 21) +
  labs(
    title = "SMD of risk factors (-365 to -31)",
    y = "SMD",
    x = " "
  ) +
  geom_abline(intercept = -0.1, slope = 0, linetype = "dotted", color = "black") +
  geom_abline(intercept = 0.1, slope = 0, linetype = "dotted", color = "black") +
  facet_wrap(~Database) +
  ggplot2::theme(axis.text.x = ggplot2::element_blank()) +
  guides(size = "none")
```

```{r lsc cats 3, echo=FALSE, warning=FALSE, message=FALSE}
met <- readxl::read_excel("categories/SMDimbalance.xlsx",                        , 
    sheet = "RISK FACTORS_-12to-inf") %>%
  select(c(`Concept name (concept ID)`, `Metabolic Syndrome`)) %>%
  distinct()

lsc_met <- merge(lsc, met, by = "Concept name (concept ID)", all = TRUE)
# Merge back to tag conditions with their appearance count per DB
lsc_met <- lsc_met %>% 
    mutate(across(c(target_cohort, comparator_cohort), ~ as.numeric(.x)/100)) |>
    mutate(across(c(target_cohort, comparator_cohort), ~ as.numeric(.x)*100)) |>
    filter(`Time window` %in% c("-365 to -31")) |>
  filter(Table == "condition_occurrence",
         !Database %in% c("OncoEMR", "OptimaEstonia", "THIN UK"))

lsc_met <- subset(lsc_met, !is.na(`Lung Cancer All Sampled`) & !is.na(`Lung Cancer All Matched`)) %>%
  na.omit()

ggplot(lsc_met, aes(x = `Metabolic Syndrome`, y = `Standardised mean difference`)) +
  geom_point(aes(fill = `Metabolic Syndrome`, size = `Lung Cancer All Sampled`),
             colour = "black", shape = 21) +
  labs(
    title = "SMD of metabolic syndromes (-365 to -31)",
    y = "SMD",
    x = " "
  ) +
  geom_abline(intercept = -0.1, slope = 0, linetype = "dotted", color = "black") +
  geom_abline(intercept = 0.1, slope = 0, linetype = "dotted", color = "black") +
  facet_wrap(~Database) +
  ggplot2::theme(axis.text.x = ggplot2::element_blank()) +
  guides(size = "none")
```

## Outcome Attrition

```{r outcome_attrition, warning=FALSE, echo=FALSE, message=FALSE, eval=TRUE, results='hide', fig.keep='none'}

orderSummaryAttrition <- function(x) {
  vars <- c(
    "number_records", "number_subjects", "excluded_records", "excluded_subjects"
  )
  x |>
    dplyr::mutate(additional_level = as.numeric(.data$additional_level)) |>
    dplyr::inner_join(
      dplyr::tibble(variable_name = vars, var_id = seq_along(vars)),
      by = "variable_name"
    ) |>
    dplyr::arrange(.data$result_id, .data$additional_level, .data$var_id) |>
    dplyr::select(!"var_id") |>
    dplyr::mutate(additional_level = as.character(.data$additional_level))
}

summariseAttrition <- function(att,
                               set = NULL,
                               tname = "unknown",
                               cname = "unknown") {
  if (is.null(set)) {
    set <- att |>
      dplyr::select("cohort_definition_id") |>
      dplyr::distinct() |>
      dplyr::mutate(
        "result_id" = .data$cohort_definition_id,
        "cohort_name" = paste0("unknown_", .data$cohort_definition_id)
      )
  }
  att |>
    dplyr::inner_join(
      set |>
        dplyr::select("cohort_definition_id", "result_id", "cohort_name"),
      by = "cohort_definition_id"
    ) |>
    dplyr::select(-"cohort_definition_id") |>
    dplyr::mutate(dplyr::across(!"result_id", as.character)) |>
    tidyr::pivot_longer(
      cols = c(
        "number_records", "number_subjects", "excluded_records",
        "excluded_subjects"
      ),
      names_to = "variable_name",
      values_to = "estimate_value"
    ) |>
    dplyr::mutate(
      "estimate_name" = "count",
      "variable_level" = NA_character_,
      "estimate_type" = "integer",
      "cdm_name" = cname
    ) |>
    visOmopResults::uniteGroup("cohort_name") |>
    visOmopResults::uniteStrata("reason") |>
    visOmopResults::uniteAdditional("reason_id") |>
    orderSummaryAttrition() |>
    omopgenerics::newSummarisedResult(
      settings = set |>
        dplyr::select(!"cohort_name") |>
        dplyr::mutate(
          "result_type" = "summarise_cohort_attrition",
          "package_name" = "CohortCharacteristics",
          "package_version" = "0.5.1",
          "table_name" = tname
        ) |>
        dplyr::relocate(dplyr::all_of(c(
          "result_id", "result_type", "package_name", "package_version"
        ))) |>
        dplyr::mutate(
          cohort_definition_id = as.character(.data$cohort_definition_id)
        )
    )
}


outcome_attrition_files<-results[stringr::str_detect(results, ".csv")]
outcome_attrition_files<-results[stringr::str_detect(results, "outcome_attrition")]
outcome_attrition_temp <- list()
outcome_attrition <- list()

for(i in seq_along(outcome_attrition_files)){
  
  
  outcome_attrition_temp[[i]]<-readr::read_csv(outcome_attrition_files[[i]],
                                            show_col_types = FALSE)
  
  db_names <- str_extract(outcome_attrition_files[[i]], "(?<=data/)(.*?)(?=_outcome_attrition\\.csv)")
  
  
  outcome_attrition[[i]] <- summariseAttrition(outcome_attrition_temp[[i]],
                                               cname = db_names                 
                                               ) %>% 
    omopgenerics::suppress(minCellCount = 5)
  
  
}

# bind the attrition cohorts and only keep main cohorts not matched ones
outcome_attrition_combined <- bind(outcome_attrition) %>% filter(
  group_level == "unknown_1" |
    group_level == "unknown_2" |
    group_level == "unknown_3" |
    group_level == "unknown_4" 
) %>% 
  filter(strata_level != "Cohort records collapsed") %>% 
  mutate(group_level = case_when(
    group_level == "unknown_1" ~ "Lung Cancer All",
    group_level == "unknown_2" ~ "Lung Cancer Broad",
    group_level == "unknown_3" ~ "Lung Cancer Narrow",
    group_level == "unknown_4" ~ "Small Cell Lung Cancer",
    TRUE ~ group_level
  )) %>% 
  mutate(cdm_name = case_when(
    cdm_name == "CPRD_GOLD" ~ "CPRD GOLD",
    cdm_name == "German DA M202403" ~ "DA Germany",
    cdm_name == "GERMANY DA" ~ "DA Germany",
    cdm_name == "USONCEMR202112SRC" ~ "OncoEMR",
    cdm_name == "THIN_es" ~ "THIN Spain",
    cdm_name == "THIN_be" ~ "THIN Belgium",
    cdm_name == "THIN_fr" ~ "THIN France",
    cdm_name == "THIN_it" ~ "THIN Italy",
    cdm_name == "THIN_ro" ~ "THIN Romania",
    cdm_name == "THIN_uk" ~ "THIN UK",
    TRUE ~ cdm_name
  )) %>%
  filter(!cdm_name %in% c("OncoEMR", "THIN UK", "OptimaEstonia"))


process_exclusion_summary <- function(df, group_level_value) {
  df_group <- df %>% filter(group_level == group_level_value)
  # Filtered data
  filtered_df <- subset(df_group, strata_level %in% c("Qualifying initial records", "Excluded patients outside study period"))
  exclusions_df <- subset(df_group, !(strata_level %in% c("Qualifying initial records", "Excluded patients outside study period")))
  # Sum exclusions
  excluded_records_sum <- sum(as.numeric(exclusions_df$estimate_value[exclusions_df$variable_name == "excluded_records"]), na.rm = TRUE)
  excluded_subjects_sum <- sum(as.numeric(exclusions_df$estimate_value[exclusions_df$variable_name == "excluded_subjects"]), na.rm = TRUE)
  # Template for exclusion summary rows
  template_row <- exclusions_df[1, ]
  # Create summary rows for exclusions
  summary_row_records <- template_row
  summary_row_records$strata_level <- "Excluded patients < 18 years or no sex recorded or < 1 year prior history"
  summary_row_records$variable_name <- "excluded_records"
  summary_row_records$estimate_value <- excluded_records_sum
  summary_row_subjects <- template_row
  summary_row_subjects$strata_level <- "Excluded patients < 18 years or no sex recorded or < 1 year prior history"
  summary_row_subjects$variable_name <- "excluded_subjects"
  summary_row_subjects$estimate_value <- excluded_subjects_sum
  # Combine summary rows into exclusions_df
  summary_rows <- bind_rows(summary_row_records, summary_row_subjects) %>%
    mutate(estimate_value = as.character(estimate_value))
  exclusions_df <- bind_rows(exclusions_df, summary_rows) %>%
    mutate(estimate_value = as.character(estimate_value))
  # Add summary rows to filtered_df
  filtered_df_add <- bind_rows(filtered_df, summary_rows)
  # Compute collapsed 'number_records'
  qualifying_nr <- as.numeric(filtered_df$estimate_value[filtered_df$strata_level == "Qualifying initial records" & filtered_df$variable_name == "number_records"])
  collapsed_nr <- qualifying_nr - excluded_records_sum
  # Summary row for collapsed 'number_records'
  template_row_nr <- filtered_df[filtered_df$strata_level == "Qualifying initial records" & filtered_df$variable_name == "number_records", ][1, ]
  summary_row_nr <- template_row_nr
  summary_row_nr$strata_level <- "Excluded patients < 18 years or no sex recorded or < 1 year prior history"
  summary_row_nr$estimate_value <- as.character(collapsed_nr)
  summary_row_nr$additional_level <- "3"
  # Add summary row to summary_rows and filtered_df
  summary_rows <- bind_rows(summary_rows, summary_row_nr)
  filtered_df_add <- bind_rows(filtered_df_add, summary_row_nr)
  # Compute collapsed 'number_subjects'
  qualifying_ns <- as.numeric(filtered_df$estimate_value[filtered_df$strata_level == "Qualifying initial records" & filtered_df$variable_name == "number_subjects"])
  collapsed_ns <- qualifying_ns - excluded_subjects_sum
  # Summary row for collapsed 'number_subjects'
  template_row_ns <- filtered_df[filtered_df$strata_level == "Qualifying initial records" & filtered_df$variable_name == "number_subjects", ][1, ]
  summary_row_ns <- template_row_ns
  summary_row_ns$strata_level <- "Excluded patients < 18 years or no sex recorded or < 1 year prior history"
  summary_row_ns$estimate_value <- as.character(collapsed_ns)
  summary_row_ns$additional_level <- "3"
  # Final merge
  summary_rows <- bind_rows(summary_rows, summary_row_ns)
  filtered_df_add <- bind_rows(filtered_df_add, summary_row_ns) %>% 
    mutate(
      additional_level = ifelse(
        strata_level == "Excluded patients < 18 years or no sex recorded or < 1 year prior history",
        "3",
        additional_level
      )
    ) %>%
    arrange(additional_level)
  return(filtered_df_add)
}


final_result <- outcome_attrition_combined %>%
  split(.$cdm_name) %>%                 # Split by database
  lapply(function(db_df) {
    group_results <- lapply(unique(db_df$group_level), function(g) {
      process_exclusion_summary(db_df, g)
    })
    bind_rows(group_results)           # Combine all group_level results for one database
  }) %>%
  bind_rows()


outcome_attrition_combined <- final_result





# split results
plot_data <- outcome_attrition_combined %>% filter(group_level == "Lung Cancer Broad" )

databases_names <- plot_data %>% distinct(cdm_name) %>% pull()

# split results into 3
plot_data1 <- plot_data %>% filter(cdm_name %in% databases_names[1:2])

plot_data2 <- plot_data %>% filter(cdm_name %in% databases_names[3:4])

plot_data3 <- plot_data %>% filter(cdm_name %in% databases_names[5:6])

plot_data4 <- plot_data %>% filter(cdm_name %in% databases_names[7:8])


#create png images for each subset of cohort attrition
img1 <- CohortCharacteristics::plotCohortAttrition( plot_data1, 
                                            type = "png",
                                            show = c("subjects") )
img2 <- CohortCharacteristics::plotCohortAttrition( plot_data2, 
                                            type = "png",
                                            show = c("subjects") )
img3 <- CohortCharacteristics::plotCohortAttrition( plot_data3, 
                                            type = "png",
                                            show = c("subjects") )
img4 <- CohortCharacteristics::plotCohortAttrition( plot_data4, 
                                            type = "png",
                                            show = c("subjects") )

g1 <- grid::rasterGrob(img1, interpolate = TRUE)
g2 <- grid::rasterGrob(img2, interpolate = TRUE)
g3 <- grid::rasterGrob(img3, interpolate = TRUE)
g4 <- grid::rasterGrob(img4, interpolate = TRUE)

# Open a PNG device to save the output
png("combined_attrition.png", width = 3000, height = 4000, res = 400) # Adjust dimensions if needed

# Set up layout: 1 row, 3 columns
grid::grid.newpage()
layout <- grid::grid.layout(nrow = 4, ncol = 1)
grid::pushViewport(grid::viewport(layout = layout))

# Draw each image in its cell
for (i in 1:4) {
    grid::pushViewport(grid::viewport(layout.pos.row = i, layout.pos.col = 1))
    grid::grid.draw(get(paste0("g", i)))  # dynamically access g1, g2, g3
    grid::upViewport()
}

# Finish and save the file
dev.off()


```

![](combined_attrition.png)
